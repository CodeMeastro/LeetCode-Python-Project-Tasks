method :

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:

        head = list1
        listing = []
        while head is not None:
            listing.append(head.val)
            head = head.next
        new_head = list2
        while new_head is not None:
            listing.append(new_head.val)
            new_head = new_head.next
        
        print(listing)
        listing.sort()
        if not listing:
            return None
        
        head1 = ListNode(listing[0])
        current = head1
        for val in listing[1:]:
            current.next = ListNode(val)
            current = current.next
        
        return head1

Method 2:
dummy = ListNode()
        current = dummy

        while list1 and list2:
            if list1.val > list2.val:
                current.next = list2
                list2 = list2.next
            else:
                current.next = list1
                list1 = list1.next
            current = current.next
        if list1:
            current.next = list1
        else:
            current.next = list2
        
        return dummy.next
