# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
        def helper(head: Optional[ListNode]) -> int:
            current = head
            count = 0
            while current:
                count += 1
                current = current.next
            return count

        length = helper(head)
        remove = length - n
        dummy = ListNode(0)
        dummy.next = head
        current = dummy
        count = 0
        if remove == 0:
            return head.next

        while current is not None:
            if count == remove:
                current.next = current.next.next
                current = current.next
            else:
                current = current.next
            count += 1
        return dummy.next
             
